buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

plugins {
    id 'io.qameta.allure' version '2.9.6'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

configurations {
    testCompile
}

allure {
    autoconfigure = true
    version = '2.7.0'           // Latest Allure Version
    useJUnit5 {
        version = '2.7.0'       // Latest Allure Version
    }
}

group 'com.ulashchick.podcast'
version '1.0.0'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {

    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'io.github.cdimascio:dotenv-java:2.2.3'
    compileOnly 'org.projectlombok:lombok:1.18.22'

    implementation 'com.datastax.oss:java-driver-core:4.13.0'
    implementation 'com.auth0:java-jwt:3.18.3'
    implementation 'com.datastax.oss:java-driver-query-builder:4.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'
    implementation 'com.google.api-client:google-api-client:1.33.1'
    implementation 'com.google.inject:guice:5.1.0'
    implementation 'com.salesforce.servicelibs:rxgrpc-stub:1.2.3'
    implementation 'com.github.alexey-ulashchick:dashboard-protos:1.0.61'
    implementation 'io.grpc:grpc-protobuf:1.44.0'
    implementation 'io.grpc:grpc-netty:1.44.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.0'
    implementation 'org.reflections:reflections:0.10.2'

    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'com.google.truth:truth:1.1.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    testImplementation 'io.grpc:grpc-testing:1.44.0'
    testImplementation "org.testcontainers:testcontainers:1.16.3"
    testImplementation "org.testcontainers:junit-jupiter:1.16.3"
    testImplementation "org.testcontainers:cassandra:1.16.3"

}

mainClassName = 'com.ulashchick.podcast.Application'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    maxParallelForks = (int) (Runtime.runtime.availableProcessors() /2 + 1)
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

//sourceSets {
//    integrationTest {
//        compileClasspath += sourceSets.main.output + sourceSets.test.output
//        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
//    }
//}
//
//configurations {
//    integrationTestImplementation.extendsFrom testImplementation
//    integrationTestRuntime.extendsFrom testRuntime
//}
//
//task integrationTest(type: Test) {
//    description = 'Runs integration tests.'
//    group = 'verification'
//    useJUnitPlatform()
//    maxParallelForks = (int) (Runtime.runtime.availableProcessors() /2 + 1)
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//}

//check.dependsOn integrationTest
